#!/usr/bin/env php
<?php
	declare(strict_types=1);

	use App\CubeConundrum;
	use App\GearRatios;
	use App\Scratchcards;
	use App\Trebuchet;

	ini_set("memory_limit", "256M");

	const ROOT = __DIR__ . "/../";

	require_once(ROOT . "bin/init.php");

	// ./bin/run --day 1 --override example --verbose
	// ./bin/run --day 1 --override example --verbose --time
	// ./bin/run -d=1 -o=example -v

	$helpers = [
		1 => Trebuchet::class,
		2 => CubeConundrum::class,
		3 => GearRatios::class,
		4 => Scratchcards::class,
	];

	$options = getopt("d:o:vt", ["day:", "override:", "verbose", "time"]);

	$day = (int)($options['day'] ?? $options['d'] ?? null);
	$override = $options['override'] ?? $options['o'] ?? null;
	$verbose = isset($options['verbose']) || isset($options['v']);
	$time = isset($options['time']) || isset($options['t']);

	if (!isset($helpers[$day]))
	{
		throw new Exception("Day " . $day . " missing from config");
	}

	$start = hrtime(true);

	(new $helpers[$day](
		$day,
		$verbose,
		isset($override) ? ROOT . "data/" . str_pad((string)$day, 2, "0", STR_PAD_LEFT) . "/" . $override : null
	))
		->run()
		->output()
	;

	$end = hrtime(true);

	function humanReadableTime(float $count, int $level = 0, int $decimalPlaces = 4): string
	{
		if ($count >= 1000 && $level <=3)
		{
			return humanReadableTime(($count / 1000), ($level + 1));
		}

		$result = round($count, $decimalPlaces);

		$unit = match ($level)
		{
			0 => "ns",
			1 => "Î¼s",
			2 => "ms",
			3 => "s"
		};

		return $result . $unit;
	}

	if ($time)
	{
		$executionTime = $end - $start;
		echo(humanReadableTime($executionTime) . PHP_EOL);
	}
?>
